# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool: default

variables:
 bkstrgrg: 'smtxPLGD'
 bkstrg: 'smtxtfstate'
 bkcontainer: 'pipelineconfig'
 


stages:
  - stage: tfvalidate
    jobs:
    - job: validate
      continueOnError: false
      steps:
          - task: TerraformInstaller@1
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'
  
          - task: TerraformTaskV4@4
            displayName: init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'smtxServCon'
              backendAzureRmResourceGroupName: '$(bkstrgrg)'
              backendAzureRmStorageAccountName: '$(bkstrg)'
              backendAzureRmContainerName: '$(bkcontainer)'
              backendAzureRmKey: 'mAQSpLs4trDHzDgip+zHxncZlGLrWWbPmY50Oa7S2RTkBc95aN2yWegW2HmiNjRMpE0hfvCghKdj+AStYd7K5A=='
            
          - task: TerraformTaskV4@4
            displayName: validate
            inputs:
              provider: 'azurerm'
              command: 'validate'
  - stage: tfdeploy
    condition: succeeded ('tfvalidate')
    dependsOn: tfvalidate
    jobs:
      - job: apply
        steps:
          - task: TerraformInstaller@1
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'
  
          - task: TerraformTaskV4@4
            displayName: init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'smtxServCon'
              backendAzureRmResourceGroupName: '$(bkstrgrg)'
              backendAzureRmStorageAccountName: '$(bkstrg)'
              backendAzureRmContainerName: '$(bkcontainer)'
              backendAzureRmKey: 'mAQSpLs4trDHzDgip+zHxncZlGLrWWbPmY50Oa7S2RTkBc95aN2yWegW2HmiNjRMpE0hfvCghKdj+AStYd7K5A=='
          - task: TerraformTaskV4@4
            displayName: plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'smtxServCon'
            
          - task: TerraformTaskV4@4
            displayName: apply
            inputs:
                provider: 'azurerm'
                command: 'apply'
                environmentServiceNameAzureRM: 'smtxServCon'